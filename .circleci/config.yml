# Golang CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-go/ for more details
# TODO make this work
version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/bcmdarroch/go-sample
    steps:
      - checkout
      - run: go mod download
      - run: echo "✧✧✧ Running Go tests ✧✧✧"
      - run: go test -v ./...  
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.14

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/bcmdarroch/go-sample
    steps:
      - checkout
      - run: echo "✧✧✧ Downloading deps ✧✧✧"
      # specify any bash command here prefixed with `run: `
      - run: go mod download
      # TODO: build the binary and creates docker iamge
  release:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/bcmdarroch/go-sample
    steps:
      - checkout
      - run: echo "✧✧✧ Building latest release ✧✧✧"
      # TODO: push docker image towards repo for release
# Under the workflows: map, we can coordinate our two jobs, defined above.
workflows:
  version: 2
  feature_branch: # this is the name of our workflow
    jobs: # and here we list the jobs we are going to run.
      - test
      - build:
          requires:
            - test
      - release:
          requires:
            - test
          filters:
            branches:
              only: master 
